server.port=8080
management.endpoints.web.exposure.include=*
spring.cloud.gateway.metrics.enabled=true
management.endpoint.gateway.enabled=true

spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true

spring.cloud.gateway.default-filters=TokenRelay

spring.application.name=api-gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
ribbon.eureka.enabled=false
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/users

eureka.instance.instance-id=${spring.application.name}-${random.uuid}

spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=dev-secret-1
spring.security.oauth2.client.registration.spring-cloud-gateway-client.scope=openid, profile, roles
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:28080/auth/realms/microservices-realm
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:28080/auth/realms/microservices-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:28080/auth/realms/microservices-realm/protocol/openid-connect/certs