variables:
  REPOSITORY_URL: 961822111490.dkr.ecr.us-east-1.amazonaws.com
  APP_NAME: covid-alert-services
  IMAGE_TAG: userservice
  ARTIFACT_NAME: userservice-0.0.1.jar
  TASK_DEFINITION_NAME: userservice_task
  CLUSTER_NAME: covidalert-microservices
  SERVICE_NAME: userservice-service

services:
  - docker:dind

stages:
#  - build-jar
#  - build-image
  - deploy-image

before_script:
  - docker --version
  - apk add --no-cache curl jq python3 py3-pip
  - pip install awscli
  - aws --version
  - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
  - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
  - aws configure set region ${AWS_DEFAULT_REGION}
  - aws configure list

#build-microservice-jar:
#  image: openjdk:16-jdk-alpine
#  stage: build-jar
#
#  before_script:
#    - export GRADLE_USER_HOME=`pwd`/.gradle
#    - echo $ARTIFACT_NAME
#  script:
#    - ls -l userservice/
#    - ./gradlew userservice:bootJar
#    - ls -l userservice/build/libs/
#  artifacts:
#    paths:
#      - userservice/build/libs/*.jar

#build-docker-image:
#  stage: build-image
#
#  script:
#    - echo "Building image..."
#    - ls -l userservice/build/libs/
#    - docker build -t $REPOSITORY_URL/$APP_NAME:$IMAGE_TAG ./userservice
#    - aws ecr get-login-password | docker login --username AWS --password-stdin $REPOSITORY_URL
#    - echo "Pushing image..."
#    - docker push $REPOSITORY_URL/$APP_NAME:$IMAGE_TAG
#  only:
#    - pipelineCiCd-Pierre


deploy-docker-image:
  stage: deploy-image
  script:
    - echo $REPOSITORY_URL/$APP_NAME:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME --region ${AWS_DEFAULT_REGION})
    - echo $TASK_DEFINITION
    - NEW_CONTAINER_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URL/$APP_NAME:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo $NEW_CONTAINER_DEFINITION
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region ${AWS_DEFAULT_REGION} --family ${TASK_DEFINITION_NAME} --cli-input-json https://github.com/Pierre34170/covidalert/blob/main/userservice-task-definition.json
    - echo "Updating the service..."
    - aws ecs update-service --region ${AWS_DEFAULT_REGION} --cluster ${CLUSTER_NAME} --service ${SERVICE_NAME}  --task-definition ${TASK_DEFINITION_NAME}